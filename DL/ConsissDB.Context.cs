//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ESantiagoConsissEntities : DbContext
    {
        public ESantiagoConsissEntities()
            : base("name=ESantiagoConsissEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Persona> Persona { get; set; }
    
        public virtual int PersonaABC(string action, Nullable<int> idPersona, string nombre, string direccion, Nullable<int> edad, string correo, string habilidadPrimaria, string habilidadSecundaria)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var habilidadPrimariaParameter = habilidadPrimaria != null ?
                new ObjectParameter("HabilidadPrimaria", habilidadPrimaria) :
                new ObjectParameter("HabilidadPrimaria", typeof(string));
    
            var habilidadSecundariaParameter = habilidadSecundaria != null ?
                new ObjectParameter("HabilidadSecundaria", habilidadSecundaria) :
                new ObjectParameter("HabilidadSecundaria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PersonaABC", actionParameter, idPersonaParameter, nombreParameter, direccionParameter, edadParameter, correoParameter, habilidadPrimariaParameter, habilidadSecundariaParameter);
        }
    }
}
